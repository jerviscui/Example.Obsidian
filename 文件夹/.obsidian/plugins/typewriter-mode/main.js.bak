var ge=Object.defineProperty;var Ge=Object.getOwnPropertyDescriptor;var Je=Object.getOwnPropertyNames;var Qe=Object.prototype.hasOwnProperty;var Xe=(i,e)=>{for(var t in e)ge(i,t,{get:e[t],enumerable:!0})},Ye=(i,e,t,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Je(e))!Qe.call(i,s)&&s!==t&&ge(i,s,{get:()=>e[s],enumerable:!(r=Ge(e,s))||r.enumerable});return i};var Ze=i=>Ye(ge({},"__esModule",{value:!0}),i);var ot={};Xe(ot,{default:()=>st});module.exports=Ze(ot);var te={version:null,isAnnounceUpdatesEnabled:!0,isPluginActivated:!0,isTypewriterScrollEnabled:!0,isOnlyActivateAfterFirstInteractionEnabled:!1,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:!1,isTypewriterOnlyUseCommandsEnabled:!1,typewriterOffset:.5,isKeepLinesAboveAndBelowEnabled:!1,linesAboveAndBelow:5,isMaxCharsPerLineEnabled:!1,maxCharsPerLine:64,isDimUnfocusedEnabled:!1,dimUnfocusedMode:"paragraphs",dimUnfocusedEditorsBehavior:"dim",dimmedOpacity:.25,isPauseDimUnfocusedWhileScrollingEnabled:!0,isPauseDimUnfocusedWhileSelectingEnabled:!0,isHighlightCurrentLineEnabled:!0,isHighlightCurrentLineOnlyInFocusedEditorEnabled:!1,currentLineHighlightStyle:"box",currentLineHighlightUnderlineThickness:1,"currentLineHighlightColor-dark":"#444","currentLineHighlightColor-light":"#ddd",doesWritingFocusShowHeader:!1,doesWritingFocusShowStatusBar:!1,doesWritingFocusShowVignette:!0,isWritingFocusFullscreen:!0,writingFocusVignetteStyle:"box"};var v=require("obsidian");async function ie(){return await(await fetch("https://raw.githubusercontent.com/davisriedel/obsidian-typewriter-mode/main/src/UpdateNotice.md")).text()}var S=class extends v.PluginSettingTab{plugin;constructor(e,t){super(e,t),this.plugin=t}display(){this.containerEl.empty(),this.containerEl.createEl("h2",{text:"Typewriter Mode Settings"}),this.containerEl.createEl("h3",{text:"General"});for(let e of Object.values(this.plugin.features.general))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Typewriter"}),this.plugin.settings.isKeepLinesAboveAndBelowEnabled&&this.containerEl.createEl("p",{text:'Not available if "keep lines above and below" is activated'});for(let e of Object.values(this.plugin.features.typewriter))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Keep Lines Above And Below"}),this.plugin.settings.isTypewriterScrollEnabled&&this.containerEl.createEl("p",{text:"Not available if typewriter scrolling is activated"});for(let e of Object.values(this.plugin.features.keepAboveAndBelow))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Highlight Current Line"});for(let e of Object.values(this.plugin.features.currentLine))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Dimming"});for(let e of Object.values(this.plugin.features.dimming))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Limit Line Width"});for(let e of Object.values(this.plugin.features.maxChar))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Writing Focus"});for(let e of Object.values(this.plugin.features.writingFocus))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Updates and Info"});for(let e of Object.values(this.plugin.features.updates))e.registerSetting(this);ie().then(e=>{let t=this.containerEl.createDiv();this.containerEl.appendChild(t),v.MarkdownRenderer.renderMarkdown(e,t,this.app.vault.getRoot().path,new v.Component)})}};var ve=require("@codemirror/state"),g=ve.Facet.define({combine:i=>i.length===0?te:i[i.length-1]});var Te=require("@codemirror/state"),E=class{constructor(e){this.view=e;this.onLoad(),this.domResizeObserver=new ResizeObserver(this.onResize.bind(this)),this.domResizeObserver.observe(this.view.dom.ownerDocument.body)}domResizeObserver=null;userEventAllowed(e){let{isTypewriterOnlyUseCommandsEnabled:t}=this.view.state.facet(g),r=/^(select|input|delete|undo|redo)(\..+)?$/,s=/^(select.pointer)$/;return t&&(r=/^(input|delete|undo|redo)(\..+)?$/,s=/^(select)(\..+)?$/),r.test(e)&&!s.test(e)}inspectTransactions(e){let t=[],r=!1;for(let o of e.transactions){o.reconfigured&&(r=!0);let n=o.annotation(Te.Transaction.userEvent);n!==void 0&&t.push(n)}return t.length===0?{isReconfigured:r,isUserEvent:!1,allowedUserEvents:null}:{isReconfigured:!1,isUserEvent:!0,allowedUserEvents:t.reduce((o,n)=>o&&this.userEventAllowed(n),t.length>0)}}update(e){let{isReconfigured:t,isUserEvent:r,allowedUserEvents:s}=this.inspectTransactions(e);if(t&&this.onReconfigured(),!this.isDisabled()){if(!r){this.updateNonUserEvent();return}s?this.updateAllowedUserEvent():this.updateDisallowedUserEvent()}}onLoad(){}onReconfigured(){}updateAllowedUserEvent(){}updateDisallowedUserEvent(){}updateNonUserEvent(){}onResize(){}destroy(){var e;(e=this.domResizeObserver)==null||e.disconnect()}};var Se=require("@codemirror/state"),C=Se.Facet.define({combine:i=>i.length===0?{cssVariables:{},bodyAttrs:{},bodyClasses:[],persistentBodyClasses:[],allBodyClasses:[]}:i[i.length-1]});function u(i){return i.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor, .mod-inside-iframe .cm-editor")}function M(i){return i.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-scroller, .mod-inside-iframe .cm-scroller")}function me(i){return i.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-sizer, .mod-inside-iframe .cm-sizer")}function et(i,e){var t;return parseFloat((t=i.contentDOM.querySelector(".cm-active.cm-line"))==null?void 0:t.getCssPropertyValue(e).replace("px",""))}function Ee(i,e){let t=e.top,r=u(i);if(!r)return 0;let s=r.getBoundingClientRect().top;return t-s}function tt(i){let e=u(i);if(!e)return 0;let t=i.state.facet(g).typewriterOffset;return e.clientHeight*t}function it(i){let e=i.coordsAtPos(i.state.selection.main.head);if(!e)return null;let t=e.bottom-e.top,r=et(i,"line-height"),s=0,o=0;t>r?(s=t,o=0):(s=r,o=(s-t)/2);let n=tt(i),l=Ee(i,e),{isTypewriterScrollEnabled:m,isKeepLinesAboveAndBelowEnabled:f,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:c}=i.state.facet(g),p=u(i),T=M(i),w;if(!p||!T)w=0;else if(m)w=n,c&&(l<0?w=0:w=T.scrollTop+l<n?Math.min(n,l):n);else if(f){let{linesAboveAndBelow:we}=i.state.facet(g),ye=i.defaultLineHeight*we,be=p.clientHeight-i.defaultLineHeight*(we+1),qe=T.scrollTop!==0&&l<ye,_e=l>be;qe?w=ye:_e?w=be:w=l}else w=Ee(i,e);return{typewriterOffset:n,scrollOffset:w,activeLineOffset:l,lineHeight:s,lineOffset:o}}function re(i,e,t){i.requestMeasure({key:e,read:r=>it(r),write:(r,s)=>{window.requestAnimationFrame(()=>{t(r,s)})}})}var Le=require("@codemirror/state"),se=require("@codemirror/view"),Pe=require("obsidian");var ue=require("@codemirror/view");function Ce(i,e,t){let r=!1;for(let s of e)if(i.slice(t+1-s.length,t+1)===s){r=!0;break}return r}function Me(i,e,t){let r=i.sentenceDelimiters.split(""),s=i.extraCharacters.split(""),o=i.ignoredPatterns.split(`
`),n=e.from,l=e.text,m=-1;for(let c=t-n-1;c>=0;c--)if(r.contains(l[c])){if(Ce(l,o,c))continue;let p=1;for(;l[c+p]===" "&&p<t-n-1;)p+=1;for(;s.contains(l[c+p])&&r.contains(l[c+p-1])&&p<t-n-1;)p+=1;m=c+p;break}m===-1&&(m=0);let f=-1;for(let c=t-n;c<e.length;c++)if(r.contains(l[c])){if(Ce(l,o,c))continue;let p=1;for(;r.contains(l[c+p])&&p<e.length;)p+=1;for(;s.contains(l[c+p])&&p<e.length;)p+=1;f=c+p;break}return f!==-1?{start:m+n,end:f+n}:{start:m+n,end:null}}function xe(i,e){let t=[],s=i.state.selection.main.from,o=i.state.doc.lineAt(s),n=Me(e,o,s);n.end==null&&s>o.from&&(n=Me(e,o,s-1));let l=n.start,m=n.end;m==null&&(m=o.to);function f(c,p,T){t.push(ue.Decoration.mark({inclusive:!0,attributes:{},class:T}).range(c,p))}return l!==m&&(f(l,m,"active-sentence"),o.from!==l&&f(o.from,l,"active-paragraph"),m!==o.to&&f(m,o.to,"active-paragraph")),ue.Decoration.set(t,!0)}function he(i){return se.ViewPlugin.fromClass(class extends E{isInitialInteraction=!0;isRenderingAllowedUserEvent=!1;decorations=Le.RangeSet.empty;onLoad(){super.onLoad(),window.addEventListener("moveByCommand",this.moveByCommand.bind(this)),this.watchEmbeddedMarkdown(),this.onReconfigured()}isMarkdownFile(){let e=i.workspace.getActiveViewOfType(Pe.ItemView);return(e==null?void 0:e.getViewType())==="markdown"}isDisabled(){let{isPluginActivated:e}=this.view.state.facet(g);return e?!this.isMarkdownFile():!0}onReconfigured(){if(super.onReconfigured(),this.loadPerWindowProps(),this.isDisabled()){this.removeCurrentLineHighlight(),this.resetPadding(this.view);return}this.updateAfterExternalEvent()}watchEmbeddedMarkdown(){let e=".markdown-embed-content iframe.embed-iframe",t=this.view.state.facet(C);new MutationObserver(s=>{s.forEach(o=>{[].forEach.call(o.addedNodes,n=>{n.nodeType===Node.ELEMENT_NODE&&n.matches(e)&&this.loadPerWindowPropsOnElement(t,n.contentDocument.body)})})}).observe(this.view.dom.ownerDocument,{childList:!0,subtree:!0})}loadPerWindowPropsOnElement(e,t){for(let r of e.allBodyClasses)t.classList.remove(r);t.addClasses(e.persistentBodyClasses),this.isDisabled()||t.addClasses(e.bodyClasses),t.setCssProps(e.cssVariables),t.setAttrs(e.bodyAttrs)}getMarkdownBodies(){let e=this.view.dom.ownerDocument.querySelectorAll(".markdown-embed-content iframe.embed-iframe"),t=Array.from(e).map(r=>r.contentDocument.body);return[this.view.dom.ownerDocument.body,...t]}loadPerWindowProps(){let e=this.getMarkdownBodies(),t=this.view.state.facet(C);for(let r of e)this.loadPerWindowPropsOnElement(t,r)}removeCurrentLineHighlight(e=this.view){let t=u(e);if(!t)return;let r=t.querySelector(".ptm-current-line-highlight");r&&r.remove()}loadCurrentLineHighlight(e=this.view){let t=u(e);if(!t)return null;let r=t.querySelector(".ptm-current-line-highlight");if(!r){r=document.createElement("div");let s=e.state.facet(g);r.className=`ptm-current-line-highlight ptm-current-line-highlight-${s.currentLineHighlightStyle}`,t.appendChild(r)}return r}destroyCurrentLineHighlight(e=this.view){let t=u(e);if(!t)return;let r=t.querySelector(".ptm-current-line-highlight");r==null||r.remove()}setupWheelListener(){let e=M(this.view);e&&e.addEventListener("wheel",this.onWheel.bind(this),{passive:!0})}updateAllowedUserEvent(){super.updateAllowedUserEvent(),this.applyDecorations();let e=u(this.view);e&&(e.classList.remove("ptm-wheel"),e.classList.remove("ptm-select"),this.isInitialInteraction&&(e.classList.remove("ptm-first-open"),this.isInitialInteraction=!1)),this.isRenderingAllowedUserEvent=!0,re(this.view,"TypewriterModeUpdateAfterUserEvent",(t,r)=>{this.recenterAndMoveCurrentLineHighlight(r,t),this.isRenderingAllowedUserEvent=!1})}updateDisallowedUserEvent(){if(this.isRenderingAllowedUserEvent)return;super.updateDisallowedUserEvent();let e=u(this.view);e&&(this.isInitialInteraction&&(e.classList.remove("ptm-first-open"),this.isInitialInteraction=!1),e.classList.add("ptm-select")),re(this.view,"TypewriterModeUpdateAfterUserEvent",({activeLineOffset:t,lineHeight:r,lineOffset:s},o)=>{let{isHighlightCurrentLineEnabled:n}=o.state.facet(g);n&&this.moveCurrentLineHighlight(o,t,r,s)})}updateNonUserEvent(){if(super.updateNonUserEvent(),this.applyDecorations(),!this.isInitialInteraction)return;let{isOnlyActivateAfterFirstInteractionEnabled:e}=this.view.state.facet(g);if(e){let t=u(this.view);t&&t.classList.add("ptm-first-open")}}moveByCommand(){let e=u(this.view);e&&e.classList.remove("ptm-select"),this.updateAllowedUserEvent()}onResize(){this.isDisabled()||(super.onResize(),this.updateAfterExternalEvent())}onWheel(){let e=u(this.view);e&&e.classList.add("ptm-wheel")}destroy(){super.destroy(),this.destroyCurrentLineHighlight();let e=M(this.view);e&&e.removeEventListener("wheel",this.onWheel),window.removeEventListener("moveByCommand",this.moveByCommand.bind(this))}applyDecorations(){let{isDimUnfocusedEnabled:e,dimUnfocusedMode:t}=this.view.state.facet(g);!e||t!=="sentences"||(this.decorations=xe(this.view,{sentenceDelimiters:".!?",extraCharacters:"*\u201C\u201D\u2018\u2019",ignoredPatterns:"Mr."}))}updateAfterExternalEvent(){this.applyDecorations();let{isTypewriterScrollEnabled:e}=this.view.state.facet(g);re(this.view,"TypewriterModeUpdateAfterExternalEvent",(t,r)=>{this.setupWheelListener(),t&&(e&&this.setPadding(r,t.typewriterOffset),this.recenterAndMoveCurrentLineHighlight(r,t))})}moveCurrentLineHighlight(e,t,r,s){let o=this.loadCurrentLineHighlight(e);o&&(o.style.height=`${r}px`,o.style.top=`${t-s}px`)}setPadding(e,t){let{isOnlyMaintainTypewriterOffsetWhenReachedEnabled:r}=e.state.facet(g),s=me(e);s&&(s.style.padding=r?`0 0 ${t}px 0`:`${t}px 0`)}resetPadding(e){if(!this.isMarkdownFile())return;let t=me(e);t&&(t.style.padding="var(--file-margins)")}recenter(e,t){let r=e.state.selection.main.head,s=se.EditorView.scrollIntoView(r,{y:"start",yMargin:t}),o=e.state.update({effects:s});e.dispatch(o)}recenterAndMoveCurrentLineHighlight(e,{scrollOffset:t,lineHeight:r,lineOffset:s}){let{isTypewriterScrollEnabled:o,isKeepLinesAboveAndBelowEnabled:n,isHighlightCurrentLineEnabled:l}=e.state.facet(g);(o||n)&&this.recenter(e,t),l&&this.moveCurrentLineHighlight(e,t,r,s)}},{decorations:e=>e.decorations})}var je=require("obsidian");var De=require("obsidian"),ne=require("obsidian");async function rt(i,e,t){let r=await fetch(`https://api.github.com/repos/${i}/${e}/releases`),s=await r.json();if(!r.ok&&"message"in s||!Array.isArray(s))throw new Error(`Failed to fetch releases: ${s.message??"Unknown error"}`);if(t==null)return s.filter(n=>!n.draft&&!n.prerelease);let o=s.findIndex(n=>n.tag_name===t);if(o===-1)throw new Error(`Could not find release with tag ${t}`);return s.slice(0,o).filter(n=>!n.draft&&!n.prerelease)}var oe=class extends ne.Modal{releases;updateNotice;constructor(e){super(app),rt("davisriedel","obsidian-typewriter-mode",e).then(t=>{if(this.releases=t,this.releases.length===0){this.close();return}ie().then(r=>{this.updateNotice=r,this.display()}).catch(r=>{console.log(`Failed to fetch update notice: ${r}`),this.close()})}).catch(t=>{console.log(`Failed to fetch release notes: ${t}`),this.close()})}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h1",{text:"Fetching release notes..."})}onClose(){let{contentEl:e}=this;e.empty()}display(){let{contentEl:e}=this;e.empty(),e.classList.add("ptm-update-modal-container");let t=e.createDiv("ptm-update-modal"),r=this.releases.map(o=>`### ${o.tag_name}

${o.body}`).join(`
---
`),s=`# Typewriter Mode updated to v${this.releases[0].tag_name}

${this.updateNotice}

## What's new?

Here's what's new since the last version you had installed:

---

${r}`;ne.MarkdownRenderer.renderMarkdown(s,t,app.vault.getRoot().path,new De.Component)}};var y=class{constructor(e){this.plugin=e}load(){}};var d=class extends y{enable(){}disable(){}};var Ae=require("obsidian"),a=class extends d{toggleClass=null;isToggleClassPersistent=!1;commandTitle;isSettingEnabled(){return!0}getToggleClass(){return this.toggleClass}registerCommand(){this.hasCommand&&this.plugin.addCommand({id:this.setting,name:this.commandTitle,callback:this.toggle.bind(this)})}registerSetting(e){new Ae.Setting(e.containerEl).setName(this.settingTitle).setDesc(this.settingDesc).setClass("typewriter-mode-setting").addToggle(t=>t.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.toggle(r),e.display()})).setDisabled(!this.isSettingEnabled())}load(){this.registerCommand(),this.plugin.settings[this.setting]?this.enable():this.disable()}toggle(e=null){let t=e;t===null&&(t=!this.plugin.settings[this.setting]),this.plugin.settings={...this.plugin.settings,[this.setting]:t},t?this.enable():this.disable(),this.plugin.saveSettings().then()}enable(){if(this.toggleClass){let e=this.isToggleClassPersistent?"persistentBodyClasses":"bodyClasses";this.plugin.perWindowProps[e].contains(this.toggleClass)||this.plugin.perWindowProps[e].push(this.toggleClass)}}disable(){if(this.toggleClass){let e=this.isToggleClassPersistent?"persistentBodyClasses":"bodyClasses";this.plugin.perWindowProps[e].remove(this.toggleClass)}}};function Fe(i){return i.charAt(0).toUpperCase()+i.slice(1)}var ae=class extends y{load(){for(let e of["up","down"])this.plugin.addCommand({id:`move-typewriter-${e}`,name:`Move typewriter ${e}`,hotkeys:[{modifiers:["Mod"],key:e==="up"?"ArrowUp":"ArrowDown"}],editorCallback:(t,r)=>this.onCommand(t,e)})}onCommand(e,t){e.exec(`go${Fe(t)}`),window.dispatchEvent(new Event("moveByCommand"))}};var h=class extends y{registerCommand(){this.plugin.addCommand({id:this.commandKey,name:this.commandTitle,callback:this.onCommand.bind(this)})}load(){this.registerCommand()}};var le=class extends h{commandKey="typewriter-scrolling-and-paragraph-dimming";commandTitle="Toggle typewriter scrolling and paragraph dimming";onCommand(){let{isTypewriterScrollEnabled:e,isDimUnfocusedEnabled:t}=this.plugin.settings,r=e&&t;this.plugin.features.typewriter.TypewriterScroll.toggle(!r),this.plugin.features.dimming.DimUnfocused.toggle(!r)}};var ke=require("obsidian"),fe=require("obsidian"),de=class extends h{commandKey="writing-focus";commandTitle="Toggle writing focus";focusModeActive=!1;maximizedClass="ptm-maximized";focusModeClass="ptm-focus-mode";hideHeaderClass="ptm-writing-focus-no-header";vignetteElClass="ptm-writing-focus-vignette-element";vignetteStyleAttr="data-ptm-writing-focus-vignette-style";leftSplitCollapsed;rightSplitCollapsed;prevWindowSize=0;prevWasFullscreen=!1;onCommand(){this.toggleFocusMode()}addVignette(e){let t=this.plugin.settings.doesWritingFocusShowHeader?e.containerEl:e.contentEl;t.classList.add(this.vignetteElClass),t.setAttr(this.vignetteStyleAttr,this.plugin.settings.writingFocusVignetteStyle)}removeVignette(e){let t=this.plugin.settings.doesWritingFocusShowHeader?e.containerEl:e.contentEl;t.removeAttribute(this.vignetteStyleAttr),t.classList.remove(this.vignetteElClass)}startFullscreen(){if(fe.Platform.isMobile)return;let e=window.electron.remote.getCurrentWindow();this.prevWasFullscreen=e.isFullScreen(),e.setFullScreen(!0)}exitFullscreen(){if(fe.Platform.isMobile||this.prevWasFullscreen)return;window.electron.remote.getCurrentWindow().setFullScreen(!1)}onExitFullscreenWritingFocus(e){this.focusModeActive&&this.disableFocusMode(e)}storeSplitsValues(){this.leftSplitCollapsed=this.plugin.app.workspace.leftSplit.collapsed,this.rightSplitCollapsed=this.plugin.app.workspace.rightSplit.collapsed}collapseSplits(){this.plugin.app.workspace.leftSplit.collapse(),this.plugin.app.workspace.rightSplit.collapse()}restoreSplits(){this.leftSplitCollapsed||this.plugin.app.workspace.leftSplit.expand(),this.rightSplitCollapsed||this.plugin.app.workspace.rightSplit.expand()}removeExtraneousClasses(){this.plugin.app.workspace.containerEl.hasClass(this.maximizedClass)&&this.plugin.app.workspace.containerEl.removeClass(this.maximizedClass),document.body.classList.contains(this.focusModeClass)&&document.body.classList.remove(this.focusModeClass),document.body.classList.contains(this.hideHeaderClass)&&document.body.classList.remove(this.hideHeaderClass)}enableFocusMode(e){if(this.focusModeActive=!0,document.body.classList.contains(this.focusModeClass)||this.storeSplitsValues(),this.collapseSplits(),this.plugin.app.workspace.containerEl.toggleClass(this.maximizedClass,!this.plugin.app.workspace.containerEl.hasClass(this.maximizedClass)),document.body.classList.toggle(this.focusModeClass,!document.body.classList.contains(this.focusModeClass)),this.plugin.settings.doesWritingFocusShowHeader||document.body.classList.toggle(this.hideHeaderClass,!document.body.classList.contains(this.hideHeaderClass)),document.body.classList.contains(this.focusModeClass)&&Array.from(document.querySelectorAll(`.${this.focusModeClass} .workspace-split`)).forEach(t=>{let r=t;r.querySelector(".mod-active")?r.style.display="flex":r.style.display="none"}),this.plugin.settings.doesWritingFocusShowVignette&&this.addVignette(e),this.plugin.settings.isWritingFocusFullscreen){let r=function(){let s=window.innerWidth;t.prevWindowSize>s?document.fullscreenElement||(t.onExitFullscreenWritingFocus(e),document.body.removeEventListener("resize",this),t.prevWindowSize=0):t.prevWindowSize=s};this.startFullscreen();let t=this;document.body.onresize=r}}disableFocusMode(e){this.removeExtraneousClasses(),document.body.classList.contains(this.focusModeClass)&&document.body.classList.remove(this.focusModeClass),this.restoreSplits(),Array.from(document.querySelectorAll(".workspace-split")).forEach(t=>{let r=t;r.style.display="flex"}),this.plugin.settings.doesWritingFocusShowVignette&&this.removeVignette(e),this.plugin.settings.isWritingFocusFullscreen&&this.exitFullscreen(),this.focusModeActive=!1}toggleFocusMode(){let e=this.plugin.app.workspace.getActiveViewOfType(ke.ItemView);e.getViewType()!=="empty"&&(this.focusModeActive?this.disableFocusMode(e):this.enableFocusMode(e))}async onload(){this.plugin.addRibbonIcon("enter","Toggle Writing Focus",e=>{this.toggleFocusMode()})}};var pe=class extends h{commandKey="toggle-dimming";commandTitle="Toggle dimming";onCommand(){this.plugin.features.dimming.DimUnfocused.toggle()}};var ce=class extends h{commandKey="toggle-typewriter";commandTitle="Toggle typewriter scrolling";onCommand(){let{isTypewriterScrollEnabled:e}=this.plugin.settings;this.plugin.features.typewriter.TypewriterScroll.toggle(!e)}};function Oe(i){return[new ce(i),new pe(i),new le(i),new ae(i),new de(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{})}var Ue=require("obsidian"),b=class extends d{setting;themeMode;constructor(e,t){super(e),this.themeMode=t,this.setting=`currentLineHighlightColor-${t}`}registerSetting(e){new Ue.Setting(e.containerEl).setName(`Current line highlight color in ${this.themeMode} themes`).setDesc(`The color of the current line highlight in ${this.themeMode} themes`).setClass("typewriter-mode-setting").addText(t=>t.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.changeCurrentLineHighlightColor(r)}))}load(){this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${this.plugin.settings[this.setting]}`)}changeCurrentLineHighlightColor(e){this.plugin.settings[this.setting]=e,this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${e}`),this.plugin.saveSettings().then()}};var x=class extends b{constructor(e){super(e,"dark")}};var L=class extends b{constructor(e){super(e,"light")}};var We=require("obsidian"),P=class extends d{setting="currentLineHighlightStyle";registerSetting(e){new We.Setting(e.containerEl).setName("Current line highlight style").setDesc("The style of the current line highlight").setClass("typewriter-mode-setting").addDropdown(t=>t.addOption("box","Box").addOption("underline","Underline").setValue(this.plugin.settings.currentLineHighlightStyle).onChange(r=>{this.changeCurrentLineHighlightStyle(r),e.display()}))}changeCurrentLineHighlightStyle(e){this.plugin.settings.currentLineHighlightStyle=e,this.plugin.saveSettings().then()}};var Ve=require("obsidian"),D=class extends d{setting="currentLineHighlightUnderlineThickness";registerSetting(e){new Ve.Setting(e.containerEl).setName("Current line underline thickness").setDesc("The thickness of the underline that highlights the current line").setClass("typewriter-mode-setting").addSlider(t=>t.setLimits(1,5,1).setDynamicTooltip().setValue(this.plugin.settings.currentLineHighlightUnderlineThickness).onChange(r=>{this.changeCurrentLineHighlightUnderlineThickness(r)}))}load(){this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${this.plugin.settings.currentLineHighlightUnderlineThickness}px`)}changeCurrentLineHighlightUnderlineThickness(e){this.plugin.settings.currentLineHighlightUnderlineThickness=e,this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${e}px`),this.plugin.saveSettings()}};var A=class extends a{setting="isDimUnfocusedEnabled";toggleClass="ptm-dim-unfocused";hasCommand=!0;commandTitle="Toggle dimming";settingTitle="Dim unfocused";settingDesc="Dim unfocused paragraphs / sentences"};var He=require("obsidian"),F=class extends d{setting="dimUnfocusedEditorsBehavior";registerSetting(e){new He.Setting(e.containerEl).setName("Dimming behavior in unfocused notes").setDesc("How to dim paragraphs / sentences in notes / editors that your cursor is not on (e.g. if you have multiple notes open in split panes)").setClass("typewriter-mode-setting").addDropdown(t=>t.addOption("dim-none","Do not dim anything").addOption("dim","Dim all but the previously focused paragraph / sentence").addOption("dim-all","Dim everything").setValue(this.plugin.settings.dimUnfocusedEditorsBehavior).onChange(r=>{this.changeDimUnfocusedEditorsBehavior(r),e.display()}))}load(){super.load(),this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=this.plugin.settings.dimUnfocusedEditorsBehavior}changeDimUnfocusedEditorsBehavior(e){this.plugin.settings.dimUnfocusedEditorsBehavior=e,this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=e,this.plugin.saveSettings().then()}};var Be=require("obsidian"),k=class extends d{setting="dimmedOpacity";registerSetting(e){new Be.Setting(e.containerEl).setName("Opacity of dimmed elements").setDesc("The opacity of dimmed elements").setClass("typewriter-mode-setting").addSlider(t=>t.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.dimmedOpacity*100).onChange(r=>{this.changeDimmedOpacity(r/100)}))}load(){this.plugin.setCSSVariable("--dimmed-opacity",`${this.plugin.settings.dimmedOpacity}`)}changeDimmedOpacity(e=.25){this.plugin.settings.dimmedOpacity=e,this.plugin.setCSSVariable("--dimmed-opacity",`${e}`),this.plugin.saveSettings()}};var O=class extends a{setting="isHighlightCurrentLineEnabled";toggleClass="ptm-highlight-current-line";hasCommand=!0;commandTitle="Toggle highlight current line";settingTitle="Highlight current line";settingDesc="Highlights the line that the cursor is currently on"};var U=class extends a{setting="isHighlightCurrentLineOnlyInFocusedEditorEnabled";toggleClass="ptm-highlight-current-line-only-in-active-editor";hasCommand=!1;settingTitle="Highlight current line only in focused note";settingDesc="Only show highlighted line in the note your cursor is on (e.g. if you have multiple notes open in split panes)"};var W=class extends a{setting="isKeepLinesAboveAndBelowEnabled";hasCommand=!0;commandTitle="Toggle keeping lines above and below";settingTitle="Keep lines above and below";settingDesc="When enabled, always keeps the specified amount of lines above and below the current line in view";isSettingEnabled(){return!this.plugin.settings.isTypewriterScrollEnabled}};var V=class extends a{setting="isMaxCharsPerLineEnabled";toggleClass="ptm-max-chars-per-line";isToggleClassPersistent=!0;hasCommand=!0;commandTitle="Toggle maximum number of characters per line";settingTitle="Limit maximum number of characters per line";settingDesc="Limits the maximum number of characters per line"};var Re=require("obsidian"),H=class extends d{setting="linesAboveAndBelow";registerSetting(e){new Re.Setting(e.containerEl).setName("Amount of lines above and below the current line").setDesc("The amount of lines to always keep above and below the current line").setClass("typewriter-mode-setting").addText(t=>t.setValue(this.plugin.settings.linesAboveAndBelow.toString()).onChange(r=>{this.changeAmountOfLinesAboveAndBelow(parseInt(r))}))}changeAmountOfLinesAboveAndBelow(e){this.plugin.settings.linesAboveAndBelow=e,this.plugin.saveSettings().then()}};var Ie=require("obsidian"),B=class extends d{setting="maxCharsPerLine";registerSetting(e){new Ie.Setting(e.containerEl).setName("Maximum number of characters per line").setDesc("The maximum number of characters per line").setClass("typewriter-mode-setting").addText(t=>t.setValue(this.plugin.settings.maxCharsPerLine.toString()).onChange(r=>{this.changeMaxCharsPerLine(parseInt(r))}))}load(){this.plugin.setCSSVariable("--max-chars-per-line",`${this.plugin.settings.maxCharsPerLine}ch`)}changeMaxCharsPerLine(e){this.plugin.settings.maxCharsPerLine=e,this.plugin.setCSSVariable("--max-chars-per-line",`${e}ch`),this.plugin.saveSettings()}};var R=class extends a{setting="isOnlyActivateAfterFirstInteractionEnabled";hasCommand=!1;settingTitle="Only activate after first interaction";settingDesc="Activate the focused line highlight and paragraph dimming only after the first interaction with the editor"};var I=class extends a{setting="isOnlyMaintainTypewriterOffsetWhenReachedEnabled";hasCommand=!1;settingTitle="Only maintain typewriter offset when reached";settingDesc="The line that the cursor is on will not be scrolled to the center of the editor until it the specified typewriter offset is reached. This removes the additional space at the top of the editor."};var $=class extends a{setting="isPauseDimUnfocusedWhileScrollingEnabled";toggleClass="ptm-dim-unfocused-pause-while-scrolling";hasCommand=!1;settingTitle="Pause dimming while scrolling";settingDesc="If this is enabled, paragraphs / sentences are not dimmed while scrolling"};var N=class extends a{setting="isPauseDimUnfocusedWhileSelectingEnabled";toggleClass="ptm-dim-unfocused-pause-while-selecting";hasCommand=!1;settingTitle="Pause dimming while selecting text";settingDesc="If this is enabled, paragraphs / sentences are not dimmed while selecting text"};var $e=require("obsidian"),z=class extends d{setting="typewriterOffset";registerSetting(e){new $e.Setting(e.containerEl).setName("Typewriter offset").setDesc("Positions the typewriter line at the specified percentage of the screen").setClass("typewriter-mode-setting").addSlider(t=>t.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.typewriterOffset*100).onChange(r=>{this.changeTypewriterOffset(r/100)}))}changeTypewriterOffset(e){this.plugin.settings.typewriterOffset=e,this.plugin.saveSettings().then()}};var K=class extends a{setting="isTypewriterOnlyUseCommandsEnabled";toggleClass="ptm-typewriter-only-use-commands";hasCommand=!1;settingTitle="Do not snap typewriter with arrow keys";settingDesc="The typewriter will only snap when using this plugin's move commands. It will not snap when using the arrow keys. The move commands are by default Cmd/Ctrl+ArrowUp/ArrowDown, but you can assign your own hotkeys for the move commands in Obsidian's settings."};var j=class extends a{setting="isTypewriterScrollEnabled";toggleClass="ptm-typewriter-scroll";hasCommand=!0;commandTitle="Toggle typewriter scrolling";settingTitle="Typewriter scrolling";settingDesc="Turns typewriter scrolling on or off";isSettingEnabled(){return!this.plugin.settings.isKeepLinesAboveAndBelowEnabled}};var q=class extends a{setting="doesWritingFocusShowHeader";hasCommand=!1;settingTitle="Show header in writing focus";settingDesc="If enabled, the header will be shown in writing focus"};var _=class extends a{setting="doesWritingFocusShowVignette";hasCommand=!1;settingTitle="Writing focus vignette";settingDesc="Add a vignette to the edges of the screen in writing focus"};var Ne=require("obsidian"),G=class extends d{setting="writingFocusVignetteStyle";registerSetting(e){new Ne.Setting(e.containerEl).setName("Writing focus vignette style").setDesc("The style of the vignette in writing focus mode").setClass("typewriter-mode-setting").addDropdown(t=>t.addOption("box","Box").addOption("column","Column").setValue(this.plugin.settings.writingFocusVignetteStyle).onChange(r=>{this.changeVignetteStyle(r),e.display()}))}changeVignetteStyle(e){this.plugin.settings.writingFocusVignetteStyle=e,this.plugin.saveSettings().then()}};var J=class extends a{setting="isAnnounceUpdatesEnabled";toggleClass="ptm-announce-updates";hasCommand=!1;settingTitle="Announce updates";settingDesc="If enabled you will get a notice with release notes whenever you install a new version of Typewriter Mode"};var ze=require("obsidian");var Q=class extends d{setting="dimUnfocusedMode";registerSetting(e){new ze.Setting(e.containerEl).setName("Dim unfocused mode").setDesc("Choose to dim unfocused paragraphs or sentences").setClass("typewriter-mode-setting").addDropdown(t=>t.addOption("paragraphs","Paragraphs").addOption("sentences","Sentences").setValue(this.plugin.settings.dimUnfocusedMode).onChange(r=>{this.change(r),e.display()}))}load(){super.load(),this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-mode"]=this.plugin.settings.dimUnfocusedMode}change(e){this.plugin.settings.dimUnfocusedMode=e,this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-mode"]=this.plugin.settings.dimUnfocusedMode,this.plugin.saveSettings().then()}};var X=class extends a{setting="isPluginActivated";toggleClass="ptm-plugin-activated";hasCommand=!0;commandTitle="Toggle on / off";settingTitle="Activate Typewriter Mode";settingDesc="This enables or disables all the features below."};var Y=class extends a{setting="isWritingFocusFullscreen";hasCommand=!1;settingTitle="Make Obsidian fullscreen in writing focus";settingDesc="If enabled, the Obsidian window will toggle to fullscreen when entering writing focus"};var Z=class extends a{setting="doesWritingFocusShowStatusBar";hasCommand=!1;toggleClass="ptm-writing-focus-shows-status-bar";settingTitle="Show status bar in writing focus";settingDesc="If enabled, the status bar will be shown in writing focus"};function Ke(i){return{maxChar:[new V(i),new B(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),writingFocus:[new q(i),new Z(i),new Y(i),new _(i),new G(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),general:[new X(i),new R(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),typewriter:[new j(i),new z(i),new I(i),new K(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),keepAboveAndBelow:[new W(i),new H(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),currentLine:[new O(i),new L(i),new x(i),new P(i),new D(i),new U(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),dimming:[new A(i),new Q(i),new k(i),new $(i),new N(i),new F(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{}),updates:[new J(i)].reduce((e,t)=>({...e,[t.constructor.name]:t}),{})}}var ee=class extends je.Plugin{settings;perWindowProps={cssVariables:{},bodyClasses:[],bodyAttrs:{},allBodyClasses:[],persistentBodyClasses:[]};editorExtensions=[he(this.app),[]];features=Ke(this);commands=Oe(this);async onload(){let e=await this.loadData();this.settings=Object.assign(te,e),this.perWindowProps.allBodyClasses=[];for(let t of Object.values(this.features))for(let r of Object.values(t))if(r.load(),r instanceof a){let s=r.getToggleClass();s&&this.perWindowProps.allBodyClasses.push(s)}for(let t of Object.values(this.commands))t.load();this.addSettingTab(new S(this.app,this)),this.updateFacets(),this.registerEditorExtension(this.editorExtensions),this.announceUpdate()}onunload(){for(let e of Object.values(this.features))for(let t of Object.values(e))t.disable()}updateFacets(){this.editorExtensions[1]=[g.of(this.settings),C.of(this.perWindowProps)]}async saveSettings(){await this.saveData(this.settings),this.updateFacets(),this.app.workspace.updateOptions()}setCSSVariable(e,t){this.perWindowProps.cssVariables[e]=t}announceUpdate(){let e=this.manifest.version,t=this.settings.version;if(e===t||(this.settings.version=e,this.saveSettings().then(),this.settings.isAnnounceUpdatesEnabled===!1))return;new oe(t).open()}};var st=ee;
